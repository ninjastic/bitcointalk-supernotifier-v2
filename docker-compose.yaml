services:
  postgres:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    volumes:
      - ${PWD}/docker/postgres/data:/var/lib/postgresql/data
      - ${PWD}/docker/postgres/backups:/root/backups
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - supernotifier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    environment:
      REDIS_REPLICATION_MODE: master
    volumes:
      - ${PWD}/docker/redis/data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - supernotifier
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  supernotifier:
    name: supernotifier
    driver: bridge
